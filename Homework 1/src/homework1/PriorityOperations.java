package homework1;

public class PriorityOperations {
    public static void main(String[] args) {

//      5.1 5 + 2 / 8
//      5.2 (5 + 2) / 8
//      5.3 (5 + 2++) / 8
//      5.4 (5 + 2++) / --8
//      5.5 (5 * 2 >> 2++) / --8
//      5.6 (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8
//      5.6 (5 + 7 > 20 ? 68 => 68 : 22 * 2 >> 2++) / --8
//      5.8 6 - 2 > 3 && 12 * 12 <= 119
//      5.9 true && false

        int i = 2;
        int j = 8;

        int a = 5 + 2 / 8; //(1-е действие деление 2/8 = 0 тк тип переменной int целочисленный; 2-е действие сложение 5+0 = 5;
        // результат int a = 5)

        int b = (5 + 2) / 8; //(1-е действие сложение (5+2)=7 тк скобки повышают предшествование; 2-е действие деление 7/8 = 0
        // тк тип переменной int; результат int b = 0)

        int c = (5 + i++) / 8; //(1-е действие в скобках (5+2)=7, в результате i++ i инкрементируется и становится равным 3,
        // но на переменную с не влияет; 2-е действие деление 7/8=0 тк переменная int; результат int c = 0)

        int d = (5 + i++) / --j; //(1-е действие в скобках (5+3)=8, в результате i++ i инкрементируется и становится равным 4;
        // 2-е действие деление 8/7=1 тк пременная int; в результате --j j декрементируется и становится равным 7 и тк IDE сначала
        // видит декремент, то в делитель попадает уже 7; результат int d = 1)

        int e = (5 * 2 >> i++) / --j; //(1-е действие умножение в скобках 5*2=10; 2-е действие сдвиг вправо на 4 знака
        // (1010>>4=0000) или 10>>4=0, в результате i++ i инкрементируется и становится равным 5; 3-е действие деление 0/6=0,
        // в результате --j j декрементируется и становится равным 6 и тк IDE сначала видит декремент, то в делитель попадает уже 6;
        // результат int e = 0)

        int f = (5 + 7 > 20 ? 68 : 22 * 2 >> i++) / --j; //(1-е действие в скобках умножение 22*2=44; 2-е действие в скобках сложение
        //5+7=12; 3-е действие в скобках сдвиг вправо на 5 знаков (101100>>5=000001) или 44>>5=1, в результате i++ i инкрементируется
        // и становится равным 6; 4-е действие в скобках тернарная операция, тк скобки повысили предшествование тернарной операции
        // 12>20?68:1 = 1; 5-е действие деление 1/5=0 тк переменная int, в результате --j j декрементируется и становится равным 5 и тк IDE сначала видит
        // декремент, то в делитель попадает уже 5; результат int f = 0)


//      int g = (5 + 7 > 20 ? 68>=68 : 22 * 2 >> i++) / --j); // (результатом данного выражения будет ошибка компиляции, тк в переменную int g пытаются
        // внести булевское выражение типа 68>=68. Порядок вычислений будет идти до вычисления значения 68>=68, после чего JVM прервет выполнение кода и
        // выдаст ошибку)

        boolean h = 6 - 2 > 3 && 12 * 12 <= 119; //(1-е действие умножение 12*12=144; 2-е действие вычитание 6-2=4; 3-е действие
        // 144<=119=false; 4-е действие 4>3=true; 5-е действие true&&false=false; результат boolean h = false)

        boolean k = true && false; //(результат boolean k = false)

        System.out.println("Результат  int a = "+a);
        System.out.println("Результат  int b = "+b);
        System.out.println("Результат  int c = "+c);
        System.out.println("Результат  int d = "+d);
        System.out.println("Результат  int e = "+e);
        System.out.println("Результат  int f = "+f);
        System.out.println("Результат  int g = Ошибка компиляции!");
        System.out.println("Результат  boolean h = "+h);
        System.out.println("Результат  boolean k = "+k);
    }
}
